macro(sanitizers_init NS)
    string(TOUPPER "${CMAKE_BUILD_TYPE}" BUILD_TYPE)

    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang" AND BUILD_TYPE MATCHES "DEBUG")
        option(${NS}_SANITIZER "enable sanitizers" OFF)
    else()
        option(${NS}_SANITIZER "enable sanitizers" OFF)
    endif()

    option(${NS}_SANITIZER_TRAP "trap on sanitizer error" ON)
    if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        set(${NS}_SANITIZER_OPTIONS "address;undefined;function" CACHE STRING "sanitizer options")
    elseif (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
        set(${NS}_SANITIZER_OPTIONS "address;undefined" CACHE STRING "sanitizer options")
    endif()
endmacro()

function(target_sanitize NS TARGET)
    if (${NS}_SANITIZER)
        if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
            target_compile_options(${TARGET} PRIVATE -g -fno-omit-frame-pointer)
            if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND ${NS}_SANITIZER_TRAP)
                target_compile_options(${TARGET} PRIVATE -fsanitize-trap=all)
            endif()
            foreach(arg ${${NS}_SANITIZER_OPTIONS})
                target_compile_options(${TARGET} PRIVATE -fsanitize=${arg})
                target_link_options(${TARGET} PRIVATE -fsanitize=${arg})
            endforeach()
        else()
            message(FATAL_ERROR "sanitizers are not supported for ${CMAKE_CXX_COMPILER_ID}")
        endif()
    endif()
endfunction()
